# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# zsh-unplugged
function plugin-load {
  local repo plugdir initfile initfiles=()
  : ${ZPLUGINDIR:=${ZDOTDIR:-~/.config/zsh}/plugins}
  for repo in $@; do
    plugdir=$ZPLUGINDIR/${repo:t}
    initfile=$plugdir/${repo:t}.plugin.zsh
    if [[ ! -d $plugdir ]]; then
      echo "Cloning $repo..."
      git clone -q --depth 1 --recursive --shallow-submodules \
        https://github.com/$repo $plugdir
    fi
    if [[ ! -e $initfile ]]; then
      initfiles=($plugdir/*.{plugin.zsh,zsh-theme,zsh,sh}(N))
      (( $#initfiles )) || { echo >&2 "No init file '$repo'." && continue }
      ln -sf $initfiles[1] $initfile
    fi
    fpath+=$plugdir
    (( $+functions[zsh-defer] )) && zsh-defer . $initfile || . $initfile
  done
}

function completion-load {
    local completion name command completionfile
    for completion in $@; do
        name=${completion%% *}
        command=${completion#* }
        completionfile=$COMPLETIONSDIR/_$name
        if [[ ! -f $completionfile ]]; then
            echo "Creating completion file for $name..."
            # Capture the command output and status
            if output=$(eval "$command" 2>&1); then
                echo "$output" > "$completionfile"
            else
                echo "Failed to create completion for $name. Error: $output"
            fi
        fi
    done
}

# Volta
export VOLTA_FEATURE_PNPM=1
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# Cargo
source "$HOME/.cargo/env"

ZPLUGINDIR="$ZDOTDIR/plugins"
plugins=(
    # Core
    romkatv/powerlevel10k
    zsh-users/zsh-completions
    zsh-users/zsh-autosuggestions
    Aloxaf/fzf-tab

    # Plugins
    MohamedElashri/eza-zsh
    Freed-Wu/zsh-help
    reegnz/jq-zsh-plugin

    # Completions
    eastokes/aws-plugin-zsh
    MenkeTechnologies/zsh-cargo-completion
    conda-incubator/conda-zsh-completion

    # Must be after everything else
    zsh-users/zsh-syntax-highlighting
)
plugin-load $plugins

# Setup extra completions
COMPLETIONSDIR=$ZDOTDIR/completions
[[ -d $COMPLETIONSDIR ]] || mkdir $COMPLETIONSDIR
fpath=($COMPLETIONSDIR \\$fpath)

# Format: "name command"
completions=(
    "docker docker completion zsh"
    "chezmoi chezmoi completion zsh"
    "volta volta completions zsh"
    "pnpm pnpm completion zsh"
)
completion-load $completions

# Load completions
# setopt interactive_comments # needed for zsh-autocomplete
autoload -U compinit && compinit

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# Keybindings
bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward
bindkey '^j' jq-complete


# History
HISTSIZE=5000
HISTFILE=$ZDOTDIR/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space # ignoring commands starting with space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' # casing doesn't matter
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no # fail-safe
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Aliases
alias ls="eza"
alias ll="eza -lh"
alias l="eza -lah"
alias cat="bat"
alias lg="lazygit"

# Shell integrations
source <(fzf --zsh)
eval "$(zoxide init --cmd cd zsh)"
